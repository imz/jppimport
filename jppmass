#!/usr/bin/perl -w

package RPM::Source::Convert::JPPMass;

use strict;
use warnings;
use Carp;
use Getopt::Long;
use File::Basename;
use RPM qw/evrcmp/;

use RPM::Source::Convert::Mass;

our @ISA = qw/RPM::Source::Convert::Mass/;

$DESTPATH='~/hasher/repo/SRPMS.hasher:~/hasher/repo/SRPMS.hasher.0:~/hasher/repo/SRPMS.hasher.S:/var/ftp/pub/Linux/ALT/apt-java-Sisyphus/SRPMS.java:/var/ftp/pub/Linux/ALT/Sisyphus/files/SRPMS:/var/ftp/pub/Linux/ALT/5.1/branch/files/SRPMS';
$ORIGINPATH='/var/ftp/pub/Linux/jpackage/6.0/generic/free/SRPMS:/var/ftp/pub/Linux/jpackage/6.0/redhat-el-5.0/free/SRPMS:/var/ftp/pub/Linux/jpackage/6.0/fedora-10/free/SRPMS:/var/ftp/pub/Linux/jpackage/5.0-updates/generic/free/SRPMS:/var/ftp/pub/Linux/jpackage/5.0/generic/free/SRPMS:/var/ftp/pub/Linux/jpackage/5.0/redhat-el-5.0/free/SRPMS:/var/ftp/pub/Linux/jpackage/5.0/fedora-9/free/SRPMS:/var/ftp/pub/Linux/jpackage/1.7/generic/free/SRPMS';

@ORIGINSKIP=qw/gnu.trove maven-plugin-itest
apache-axiom neethi burlap3 hessian3 xml-commons-resolver12

useless:
daytrader

fractalish:
jorm
jorm-rdb-adapter
medor
perseus-cache
perseus-concurrency
perseus-persistence
perseus-pool

dead-or-deprecated:
maven2-stylus-skin
maven2-default-skin
maven2-classic-skin
(appeared_again)saxon7

jetty6-core

java_cup  --by_java-cup--
avalon-excalibur

/
#apache-axiom by ws-commons-axiom
#neethi by ws-commons-neethi
;

# not so simple... hands required!
#jsvc jakarta-commons-daemon
my @DESTSKIPEXTRA=qw/jpackage-utils/;
my @DESTSKIPNOORIGIN=qw/
drawswf
je
jed
jikes
xsdlib
/;

@DESTSKIP = (@DESTSKIPNOORIGIN, @DESTSKIPEXTRA);

my ($jvm, $nobz2, $nozip,$target);
my $origintoolsdir=dirname($0);
$RPM::Source::Convert::Mass::originimport="$origintoolsdir/jppimport";

my $convert=RPM::Source::Convert::JPPMass->new(
'-cliargs' => [
	"jpp=s" => \$ORIGINPATH,
	"alt=s"   => \$DESTPATH,
	"jvm=s" => \$jvm,
	"nobz2" => \$nobz2,
	"nozip" => \$nozip,
	"target=s"=> \$target,
],
    '-originrepo' => 'jpackage',
);
my $verbose=0;
$convert->run();

sub process_options_hook {
    my ($self)=@_;
    if ($ORIGINPATH !~ m!/fedora/linux/!) {
	## TODO: move to DistroMap
	## jpp specific maven1 translations
	my %map_jpp=qw/
maven	maven1
/;
	map {$ORIGIN2DESTMAP{$_}=$map_jpp{$_}} keys (%map_jpp);
    }
}

sub origin_import_hook {
    my ($self,$argsptr)=@_;
    push @$argsptr, '--jvm', $jvm if ($jvm);
    push @$argsptr, '--nobz2' if ($nobz2);
    push @$argsptr, '--nozip' if ($nozip);
    my $hook;
    if ($target) {
	$hook="$origintoolsdir/hooks/set_target_1$target.pl";
	push @$argsptr, '--hook', $hook if (-e $hook);
    }
}

sub is_origin_up {
    my ($self, $origin_rh, $dest_rh)=@_;
    return 1 unless $dest_rh;
    return 0 unless $origin_rh;
    return &alt_jpp_rpmvercmp($dest_rh, $origin_rh) <0;
}

sub alt_jpp_rpmvercmp {
    my ($dest_rh, $origin_rh) =@_;
    return -1 unless $dest_rh;
    return 1 unless $origin_rh;
    my $originversion=$origin_rh->{VERSION};
    my $originrelease=$origin_rh->{RELEASE};
    my $destversion=$dest_rh->{VERSION};
    my $destrelease=$dest_rh->{RELEASE};
    my $cmp = $destversion cmp $originversion;
    if ($cmp!=0) {
	$cmp=evrcmp($destversion, $originversion);
	print STDERR "$destversion rpmcmp $originversion = $cmp\n" if $verbose;
    }
    return $cmp if $cmp !=0;
    if ($destrelease=~/^alt([^_]+)_(.+jpp)(\d.\d)$/) {
	my $altjppsubrel=$2;
	$cmp=evrcmp($altjppsubrel, $originrelease);
	print STDERR "$altjppsubrel cmp $originrelease = $cmp\n" if $verbose;
	return $cmp;
    }
    return -1;
}

1;

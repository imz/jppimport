#!/usr/bin/perl -w

package RPM::Source::Convert::JPPMass;

use strict;
use warnings;
use File::Basename;
use Source::Repository::Mass::ALTLinuxImport qw!fcimport/Sisyphus!;
use Source::Repository::Mass::SkipName::Listed;
use Source::Repository::Mass::FedoraOrigin;
use RPM::Source::Convert::Plugins::JPackage2ALT;
## PassThrough ---------------------------------------------
use Source::Repository::Mass::Transform::PassThrough;
use RPM::Source::Transformation::GenericUtility;
our @ISA = qw/Source::Repository::Mass::Transform::PassThrough/;
my $origintoolsdir=dirname($0);
$Source::Repository::Mass::Transform::PassThrough::originimport="$origintoolsdir/jppimport";
## PassThrough ---------------------------------------------
# uncomment if use embedded
#use Source::Repository::Mass::Transform::Embedded;

$Source::Repository::Mass::strategy='notolder';
$Source::Repository::Mass::version_comparator=\&Source::Package::Comparators::rpm_plus_perl_version_comparator;
$Source::Repository::Mass::release_comparator=\&jppimport_release_comparator;

my $verbose=0;
my $convert=RPM::Source::Convert::JPPMass->new();

$convert->process();

############## Static #############

use RPM::Vercmp;
sub jppimport_release_comparator {
    my ($origin,$dest) =@_;
    return 1 unless $dest;
    return -1 unless $origin;
    my $originrelease=$origin->release;
    my $destrelease=$dest->release;
    # qa does not count
    $destrelease=~s/\.qa\d+$//;
    # (?=(?:\.|$)) due to smth like Release: 7%{?dist}.1
    $originrelease=~s/\.fc\d+(\.R)?(?=(?:\.|$))//;
    $originrelease=~s/\.(?:fc|jpp)\d+$//;
    if ($destrelease=~/^alt([^_]+)_(.+)jpp[\d.]+$/) {
	my $altjppsubrel=$2;
	my $cmp=RPM::Vercmp::evrcmp($originrelease, $altjppsubrel);
	print STDERR "jppmass: $originrelease cmp $altjppsubrel = $cmp\n" if $verbose;
	return $cmp;
    }
    return 1;
}

1;

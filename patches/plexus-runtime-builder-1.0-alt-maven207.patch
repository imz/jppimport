--- ./src/test/java/org/codehaus/plexus/builder/runtime/PlexusRuntimeBuilderTest.java.sav	2005-10-13 19:34:53.000000000 -0400
+++ ./src/test/java/org/codehaus/plexus/builder/runtime/PlexusRuntimeBuilderTest.java	2006-06-19 15:49:30.000000000 -0400
@@ -28,6 +28,7 @@
 import org.apache.maven.artifact.factory.ArtifactFactory;
 import org.apache.maven.artifact.repository.ArtifactRepository;
 import org.apache.maven.artifact.repository.ArtifactRepositoryFactory;
+import org.apache.maven.artifact.repository.ArtifactRepositoryPolicy;
 import org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout;
 import org.codehaus.plexus.PlexusTestCase;
 import org.codehaus.plexus.util.FileUtils;
@@ -78,10 +79,17 @@
 
         ArtifactRepositoryLayout repositoryLayout = (ArtifactRepositoryLayout) lookup( ArtifactRepositoryLayout.ROLE, "legacy" );
 
+		String updatePolicyFlag = ArtifactRepositoryPolicy.UPDATE_POLICY_ALWAYS;
+        String checksumPolicyFlag = ArtifactRepositoryPolicy.CHECKSUM_POLICY_WARN;
+        ArtifactRepositoryPolicy snapshotsPolicy = new ArtifactRepositoryPolicy( true, updatePolicyFlag, checksumPolicyFlag );
+        ArtifactRepositoryPolicy releasesPolicy = new ArtifactRepositoryPolicy( true, updatePolicyFlag, checksumPolicyFlag );
+
         ArtifactRepository localRepository =
             artifactRepositoryFactory.createArtifactRepository( "local",
                                                                 "file://" + getTestFile( "src/test/repository" ).getAbsolutePath(),
-                                                                repositoryLayout );
+                                                                repositoryLayout,
+																snapshotsPolicy,
+																releasesPolicy );
 
         Set projectArtifacts = new HashSet();
 
--- ./src/main/java/org/codehaus/plexus/builder/AbstractBuilder.java.sav	2005-10-20 09:15:01.000000000 -0400
+++ ./src/main/java/org/codehaus/plexus/builder/AbstractBuilder.java	2006-06-19 15:48:30.000000000 -0400
@@ -248,12 +248,18 @@
 
         if ( resolveTransitively )
         {
-            result = artifactResolver.resolveTransitively( sourceArtifacts,
+
+			try {
+	            result = artifactResolver.resolveTransitively( sourceArtifacts,
                                                            originatingArtifact,
                                                            localRepository,
                                                            remoteRepositories,
                                                            metadata,
                                                            artifactFilter );
+			} catch (org.apache.maven.artifact.resolver.ArtifactNotFoundException e) {
+				throw new ArtifactResolutionException(e.getOriginalMessage(), e.getGroupId(), e.getArtifactId(), e.getVersion(), e.getType(), e.getClassifier(), e);
+			}
+
             // TODO: Assert that there wasn't any conflicts.
 
             resolvedArtifacts = result.getArtifacts();
@@ -266,7 +272,11 @@
             {
                 Artifact artifact = (Artifact) it.next();
 
-                artifactResolver.resolve( artifact, remoteRepositories, localRepository );
+				try {
+	                artifactResolver.resolve( artifact, remoteRepositories, localRepository );
+				} catch (org.apache.maven.artifact.resolver.ArtifactNotFoundException e) {
+					throw new ArtifactResolutionException(e.getOriginalMessage(), e.getGroupId(), e.getArtifactId(), e.getVersion(), e.getType(),e.getClassifier(), e);
+				}
 
                 resolvedArtifacts.add( artifact );
             }

Note: fix groups for Python, GUI, etc...
###########export ANT_OPTS="-mx256m" against blackdown
#export ANT_OPTS="-Xmx256m" against blackdown (compat)
#export MAVEN_OPTS="-Xmx256m"
# for PermGen error, running out of memory #-XX:MaxPermSize=256m
export MAVEN_OPTS=-XX:MaxPermSize=512m
#-Dmaven.javadoc.additionalparam=-J-Xmx512m
#-Dmaven.test.skip=true
#-Dmaven.test.skip.exec=true
#-Dmaven.test.failure.ignore=true
#-Dmaven.javadoc.skip=true
#-Dmaven.javadoc.source=1.5
# old
#-Dmaven.compile.target=1.5 -Dmaven.javadoc.source=1.5 \
new maven-compiler-plugin
#-Dmaven.compiler.source=1.5 -Dmaven.compiler.target=1.5 -Dmaven.javadoc.source=1.5 \
#-Dproject.build.sourceEncoding=UTF-8

#http://maven.apache.org/maven-1.x/plugins/test/properties.html
#-Dmaven.junit.jvmargs='-Xmx256m -verbose'
# does not work :(
##List of ant patterns (spared by commas) used in test:match goal to specify the tests that shouldn't run
##-Dtestnotmatchpattern='*'
##-Dtestnotmatchpattern='Hey*,Joo*,??Kaa*'
#ant -Dtest.failonerror=false 
#-Dant.build.javac.source=1.5 -Dant.build.javac.target=1.5
#-Dant.javadoc.maxmemory=64m
$ -DskipAssembly=true \
# Guice inject errors
#-Dorg.sonatype.inject.debug 

error: unmappable character for encoding ASCII
export LANG=en_US.ISO8859-1
or 
-Dproject.build.sourceEncoding=ISO8859-1

# java7 javadoc encodings error (unmappable character for encoding utf-8)
$jpp->get_section('build')->subst(qr'export MAVEN_OPTS="','export MAVEN_OPTS="-Dproject.build.sourceEncoding=ISO-8859-1 ');

# maven opt to avoid xvfb
#-Djava.awt.headless=true

export MAVEN_OPTS="-Xbootclasspath/p:$(build-classpath objectweb-asm)"

subst 's,mvn-jpp ,mvn-jpp -Dmaven.test.skip=true ,' *.spec

+      install:install-file -DgroupId=xpp3 -DartifactId=xpp3_min \
+                -Dversion=1.1.4c -Dpackaging=jar -Dfile=$(build-classpath xpp3)

find maven2-brew \! -path '*/org/jboss/security/*' -type f -print -delete ||:
find maven2-brew -exec rmdir -p {} \; 2>/dev/null ||:

# Maven 2 -> Maven 3
%pom_remove_dep :maven-project
%pom_add_dep org.apache.maven:maven-core
%pom_add_dep org.apache.maven:maven-compat
%pom_xpath_set "pom:dependency[pom:groupId[text()='org.apache.maven']]/pom:version" 3.0.4

# http://comments.gmane.org/gmane.comp.finance.mifos.devel/8362
# Failed to retrieve numeric file attributes using: '/bin/sh -c ls -1nlaR /'
# I should have not specified <directory>/<directory> in the descriptor.
# I should have removed that line.
#      <directory>/</directory>
#      <outputDirectory>/</outputDirectory>

#--------------------------------------------------------------


#--------------------------------------------------------------

DONE: with old modello, -Dmodel=path/to/file.mdo will help
DONE: added myfaces-core-api-parent and added Obsoletes:myfaces-core11-api-parent to myfaces-core12-api

[ERROR] org.apache.velocity.exception.ParseErrorException: Encountered "/" at
+org/apache/maven/doxia/siterenderer/resources/default-site.vm[line 23, column
+51]
Was expecting one of:
    "," ...
    ")" ...
    <WHITESPACE> ..
indicate that velocity14/15 should be used. (deprecated!!! now just use velocity)

# conflict with smc
smc -> jsmc

=======================================
---
UP:
TODO: jcalendar, jgoodies-* asked msp, no need to rush

maven3: todo: fix plugins to allow cmdline override 
apache-commons-lang: -Dmaven.javadoc.source=1.4 was ignored by javadoc plugin defaults (1.5)

maven3: assembly: assembly.xml must have <id></id> see fest-assembly patch for example
an example for null assembly id (cargo0)
> sed -i -e 's,<assembly>,<assembly><id>ALT</id>,' core/uberjar/src/assemble/main.xml
<    core/uberjar/target/%{oldname}-core-uberjar-%{version}.jar \
>    core/uberjar/target/%{oldname}-core-uberjar-%{version}-ALT.jar \


DONE: jacoco-> No solution found because the problem is unsatisfiable.": ["Unable to satisfy dependency from org.jacoco.core 0.5.9.201207300726 to bundle ...
ThxGoodness, fixed with -Dtycho.targetPlatform=%_libdir/eclipse

tycho:
-Dtycho.targetPlatform=/usr/lib64/eclipse

[ERROR] Then, install it using the command:
[ERROR] mvn install:install-file -DgroupId=jdepend -DartifactId=jdepend -Dversion=2.9.1 -Dpackaging=jar -Dfile=/path/to/file

TODO: ant -> move patches

TODO: 16core=outofmemory -- -Dmaven.test.skip.exec=true
simple
disruptor
bean-validation-api
grizzly

no fc24
OSGi-bundle-ant-task -> depend on old aqute-bnd classes
OSGi-bundle-ant-task -> package aQute.lib.osgi does not exist [javac] import aQute.lib.osgi.Analyzer;]
OSGi-bundle-ant-task: --no need (del?)
metadata-extractor
pdf-renderer -

jbossws-cxf -> fc21 no fc24
invokebinder
owasp-esapi-java
maven-checkstyle-plugin

# eclipse
#jetty -> [  artifact org.eclipse.equinox.http:servlet:jar:1.0.0-v20070606 ] <> eclipse-platform
#jgit from eclipse-jgit
# eclipse-swt, eclipse-equinox-osgi

(unbootstrap:)
jruby (missing subdirs)TODO devel + rpm-macros-jruby
sisu -> (eclipse stuff?)

pki-core -> 
jspecview -> icedtea-web + eclipse -> to checkout with jars
sdljava -> (fix swig generation or re-use generated.tar hack)

spock+gpars -> breaks fresh javapackages-tools
0002 gradle patch or update to xmvn 2.5+maven 3.3.9


Note: fix groups for Python, GUI, etc...
###########export ANT_OPTS="-mx256m" against blackdown
#export ANT_OPTS="-Xmx256m" against blackdown (compat)
#export MAVEN_OPTS="-Xmx256m"
#-Dmaven.javadoc.additionalparam=-J-Xmx256m
#-Dmaven.test.skip=true
#-Dmaven.test.skip.exec=true
#-Dmaven.compile.target=1.5
#-Dmaven.javadoc.source=1.5
#http://maven.apache.org/maven-1.x/plugins/test/properties.html
#-Dmaven.junit.jvmargs='-Xmx256m -verbose'
# does not work :(
##List of ant patterns (spared by commas) used in test:match goal to specify the tests that shouldn't run
##-Dtestnotmatchpattern='*'
##-Dtestnotmatchpattern='Hey*,Joo*,??Kaa*'
#ant -Dtest.failonerror=false 

# for PermGen error, running out of memory
export MAVEN_OPTS=-XX:MaxPermSize=512m

subst 's,mvn-jpp ,mvn-jpp -Dmaven.test.skip=true ,' *.spec

an example how to install missing jar file manually
#--------------------------------------------------------------
# Mock objects is sort of a special case since it does not reside in 
# /usr/share/java. So we install it manually via maven.

export MAVEN_REPO_LOCAL=$(pwd)/.m2/repository
mkdir -p $MAVEN_REPO_LOCAL

mvn-jpp install:install-file \
    -Dmaven.repo.local=$MAVEN_REPO_LOCAL \
    -DgroupId=mockobjects \
    -DartifactId=mockobjects-jdk1.4-j2ee1.3 \
    -Dversion=0.09 \
    -Dpackaging=jar \
    -Dfile=$(build-classpath mockobjects-jdk1.4-j2ee1.4)
#--------------------------------------------------------------

### HOW TO ADD synonims in pom ###
<project>
  <modelVersion>4.0.0</modelVersion>
  <groupId>itext</groupId>
  <artifactId>itext</artifactId>
  <name>itext</name>
  <version>1.3</version>

  <distributionManagement>
    <relocation>
      <groupId>com.lowagie</groupId>
    </relocation>
  </distributionManagement>
</project>

==duplicate rpms to remove:==
ibatis by apache-ibatis
portals-pluto && portals-pluto10
dups TODO
wadi by wadi2
bouncycastle13(todo:it's safe to remove suffix -jdk.x from requirements) by bouncycastle
----------

# TODO: geronimo-j2ee-1.4-apis should not provide ... because they do not have the corresponding symlinks!

# to report:
docbook-xsl-java-xalan is dead because of xalan-j 2.5 specific code (does not rebuild)
so I manually created docbook-xsl-xalan-1.00-alt1_0jpp5.src.rpm based on docbook-xsl-saxon.

# conflict with smc
smc -> jsmc

# wersiondowns
antlr(manually-pick-repolib)
xerces-j2(let be up,manually-pick-repolib)
bcel(let be up)
bcf
wstx
snmptrapappender due to -repolib ?

# bootstrap 
jakarta-commons-httpclient-repolib
jakarta-commons-beanutils-repolib
...

##############
problems caused jpp-ing:
##############
maven-model
--------------------------------
running
+ java org.codehaus.modello.ModelloCli src/main/mdo/maven.mdo java target/generated-sources 3.0.0 false 
Exception in thread "main" org.codehaus.modello.ModelloException: Error while starting plexus.
        at org.codehaus.modello.Modello.<init>(Modello.java:57)
        at org.codehaus.modello.ModelloCli.main(ModelloCli.java:46)
Caused by: java.lang.NullPointerException
        at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:299)
        at org.codehaus.modello.Modello.<init>(Modello.java:53)
--------------------------------
plexus-jruby-factory: calls deprecated jruby.eval() methods, dead by upstream


TODO: jbossws.diff shows that bcond_with's does not work and should be converted to %if_with?


==== deprecation:
activemq4,spring-ldap,acegi-security->apacheds10->apacheds-daemon10


================== last 5.0 update ================
TODO: up
nanocontainer-nanowar -> (webwork1 jar; mv .no!)
asn1
openqa-selenium-rc -<- [bug in maven2.0.7 ant plugin]
activesoap -- need fix for new stax-utils
axis2
ops4j-pax -> spring-osgi -<- [missing pom dep on felix/osgi.core?]

============

TODO: update
eclipse-pydev -> piccolo2d -> maven-plugin-bundle

# temporally hacked manually
#eclipse-rse -> Requires(fc12): jakarta-commons-net >= 0:2.0

=========== maven 2.0.8 ==========================
patch?
http://jira.codehaus.org/browse/MSHARED-17
TODO: rebuild maven-doxia + maven-doxia-sitetools
due to:
[INFO] Trace
org.apache.maven.lifecycle.LifecycleExecutionException: Error during page generation
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:564)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:480)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:459)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:311)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:278)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:143)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:333)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:126)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:282)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.plugin.MojoExecutionException: Error during page generation
        at org.apache.maven.plugins.site.SiteMojo.execute(SiteMojo.java:102)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:447)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:539)
        ... 16 more
Caused by: org.apache.maven.doxia.siterenderer.RendererException: No method on class org.apache.maven.report.projectinfo.CimReport
        at org.apache.maven.plugins.site.ReportDocumentRenderer.renderDocument(ReportDocumentRenderer.java:143)
        at org.apache.maven.doxia.siterenderer.DefaultSiteRenderer.renderModule(DefaultSiteRenderer.java:269)
        at org.apache.maven.doxia.siterenderer.DefaultSiteRenderer.render(DefaultSiteRenderer.java:101)
        at org.apache.maven.plugins.site.SiteMojo.renderLocale(SiteMojo.java:130)
        at org.apache.maven.plugins.site.SiteMojo.execute(SiteMojo.java:97)
        ... 18 more
Caused by: java.lang.NoSuchMethodError: org.apache.maven.reporting.MavenReport.generate(Lorg/codehaus/doxia/sink/Sink;Ljava/util/Locale;)V
        at org.apache.maven.plugins.site.ReportDocumentRenderer.renderDocument(ReportDocumentRenderer.java:139)
        ... 22 more
Embedded error: No method on class org.apache.maven.report.projectinfo.ScmReport
org.apache.maven.reporting.MavenReport.generate(Lorg/codehaus/doxia/sink/Sink;Lj
ava/util/Locale;)V
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 3 seconds
[INFO] Finished at: Mon Sep 20 15:58:20 UTC 2010
[INFO] Final Memory: 26M/360M
